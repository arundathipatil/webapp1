{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.service.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.service.ts","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/registration/registration.service.ts","./src/app/constant/const.ts","./src/app/core/api.service.ts","./src/app/models/User.ts","./src/app/modules/angular-mat/angular-mat.module.ts","./src/app/services/authentication.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { HomeComponent } from './components/home/home.component';\n\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'registration', component: RegistrationComponent},\n  {path: 'home', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router,  } from '@angular/router';\nimport { AuthenticationService } from './services/authentication.service';\nimport { User } from './models/User';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'web';\n  user: User;\n  loggedIn: boolean = false;\n  constructor(private authService: AuthenticationService, private router: Router) { \n\n    if (this.authService.currentUserValue) { \n      this.loggedIn = true;\n      this.user = new User();\n      this.user = JSON.parse(localStorage.getItem('currentUser'));\n    };\n  }\n\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate([\"\"]);\n\n  }\n}\n","<mat-toolbar color=\"primary\">\n    Web Application\n    <span style=\"padding-left: 33em;\">\n        <button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n        <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>Edit Profile</button>\n        <button mat-menu-item>Change Password</button>\n        <button mat-menu-item (click)=\"logout()\">Logout</button>\n        </mat-menu>\n    </span>\n</mat-toolbar>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthenticationService } from './services/authentication.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMatModule } from './modules/angular-mat/angular-mat.module';\nimport { RegistrationComponent } from './components/registration/registration.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AngularMatModule,\n    FormsModule\n  ],\n  providers: [\n    AuthenticationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationStart } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { HomeService } from './home.service';\nimport { filter, map } from 'rxjs/operators';\nimport { User } from 'src/app/models/User';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  userDetailsForm: FormGroup;\n  firstName: FormControl;\n  lastName: FormControl;\n  email: FormControl;\n  state$: any;\n  loggedinUser: User = new User();\n  constructor(private homervice: HomeService, \n              private route: ActivatedRoute, \n              private authenticationService:AuthenticationService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    if (!this.authenticationService.currentUserValue) { \n      this.router.navigate([\"\"]);\n    };\n    \n    this.route.queryParams.subscribe(params => {\n      this.loggedinUser[\"firstName\"] = params[\"firstName\"];\n      this.loggedinUser[\"lastName\"] = params[\"lastName\"];\n      this.loggedinUser[\"email\"] = params[\"email\"];\n      this.loggedinUser[\"password\"] = \"\";\n\n      this.firstName = new FormControl(this.loggedinUser.firstName, Validators.required);\n      this.lastName = new FormControl(this.loggedinUser.lastName, Validators.required);\n      this.email = new FormControl(this.loggedinUser.email, [\n      Validators.required,\n      Validators.email\n      ]);\n      this.userDetailsForm = new FormGroup({\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email\n      })\n  });\n\n   \n    \n  }\n\n  updateUser() {\n    let user: User = new User();\n    user[\"firstName\"] = this.firstName.value;\n    user[\"lastName\"] = this.lastName.value;\n    user[\"email\"] = this.email.value;\n    // user[\"password\"] = this.pa\n    this.homervice.updateUserDetails(user)\n    .subscribe(data=>{\n      alert(\"User details Updated Succesfully\");\n    }, error=>{\n        alert(\"Issue Saving User details\");\n    })\n  }\n\n}\n","<h2>Welcome  {{firstName.value}}</h2>\n<h2>Edit user Details</h2>\n<form [formGroup]=\"userDetailsForm\" (ngSubmit)=\"updateUser()\">\n  <div>\n    <label>\n      First Name:\n      <input id=\"firstName\" type=\"text\" formControlName=\"firstName\">\n    </label>\n    <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger\">\n\n      <div *ngIf=\"firstName.errors.required\" style=\"color: red;\">\n        First Name is required.\n      </div>\n    </div>\n  </div>\n\n\n  <div>\n    <label>\n      Last Name:\n      <input id=\"lastName\" type=\"text\" formControlName=\"lastName\">\n    </label>\n    <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger\">\n\n      <div *ngIf=\"firstName.errors.required\" style=\"color: red;\">\n        Last Name is required.\n      </div>\n    </div>\n  </div>\n\n  <div>\n    <label>\n      User Name:\n      <input id=\"email\" type=\"text\" formControlName=\"email\" disabled>\n    </label>\n    <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger\">\n\n      <div *ngIf=\"email.errors.required\" style=\"color: red;\">\n        Last Name is required.\n      </div>\n      <div *ngIf=\"email.errors.email\" style=\"color: red;\">\n        Please provide a valid email id\n      </div>\n    </div>\n  </div>\n\n  <button type=\"submit\" [disabled]=\"!userDetailsForm.valid\">Submit</button>\n\n</form>\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../../core/api.service';\nimport { constant } from '../../constant/const';\nimport { User } from '../../models/User';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private apiService: ApiService) { }\n\n  getUserDetails(email: any) {\n    return this.apiService.get(constant.urls.getUserDeatils + \"?email=\"+email);\n  }\n\n  updateUserDetails(user: User) {\n     return this.apiService.post(constant.urls.updateUserDetails, user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport { LoginService } from './login.service';\nimport { User } from 'src/app/models/User';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  email : FormControl = new FormControl('', Validators.required);\n  password: FormControl = new FormControl('', [Validators.required, Validators.nullValidator])\n\n  loginForm : FormGroup = new FormGroup({\n        email: this.email,\n        password: this.password\n  });\n  \n    ngOnInit() {\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private loginService: LoginService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) { \n          let user = new User();\n          user = JSON.parse(localStorage.getItem('currentUser'));\n          let navigationExtras: NavigationExtras = {\n            queryParams: {\n                \"email\": user[\"email\"],\n                \"firstName\": user[\"firstName\"],\n                \"lastName\": user[\"lastName\"],\n            }\n        };\n          this.router.navigate(['home'], navigationExtras);\n        }\n    }\n\n    login() {\n        this.loginService.login(this.email.value, this.password.value)\n        .subscribe(data=>{\n          if(data) {\n\n            this.loginService.getUserDeatislFromApi(this.email.value)\n            .subscribe(data=>{\n              let user = new User();\n              user[\"email\"] = data[\"email\"];\n              user[\"firstName\"] = data[\"firstName\"];\n              user[\"lastName\"] = data[\"lastName\"];\n              this.authenticationService.login(user);\n              let navigationExtras: NavigationExtras = {\n                queryParams: {\n                    \"email\": data[\"email\"],\n                    \"firstName\": data[\"firstName\"],\n                    \"lastName\": data[\"lastName\"],\n                }\n            };\n            this.router.navigate(['home'], navigationExtras);\n            }, error=>{\n                alert(\"Issue fetching the user detials\");\n            });            \n            \n          } else {\n            alert(\"User name password do not match\");\n          }\n          \n        }, error=>{\n          alert(\"There was error Logging in!Please try latter\")\n        })\n        console.warn(this.loginForm.value);\n      }\n\n      // not needed\n      getUserDeatils(email: string) {\n        // this.loginService.\n\n      }\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n    // loginForm: FormGroup;\n    // loading = false;\n    // submitted = false;\n    // returnUrl: string;\n\n    \n\n    \n    // // convenience getter for easy access to form fields\n    // get f() { return this.loginForm.controls; }\n\n    // onSubmit() {\n    //     this.submitted = true;\n\n    //     // stop here if form is invalid\n    //     if (this.loginForm.invalid) {\n    //         return;\n    //     }\n\n    //     this.loading = true;\n    //     this.authenticationService.login(this.f.username.value, this.f.password.value)\n    //         .pipe(first())\n    //         .subscribe(\n    //             data => {\n    //                 this.router.navigate([this.returnUrl]);\n    //             },\n    //             error => {\n    //                 alert(\"there is an error\");\n    //                 this.loading = false;\n    //             });\n    // }\n\n}\n","<div>\n    <h2>Login</h2>\n   <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n    <label>\n        User Name:\n        <input type=\"text\" formControlName=\"email\">\n      </label>\n    \n      <label>\n        Password:\n        <input type=\"password\" formControlName=\"password\">\n      </label>\n      <button type=\"submit\" [disabled]=\"!loginForm.valid\">Submit</button>\n   </form>   \n</div>\n<button mat-raised-button color=\"primary\" [routerLink]=\"['registration']\">Register</button>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , of} from 'rxjs';\nimport { ApiService } from '../../core/api.service';\nimport { constant } from '../../constant/const';\nimport { User } from '../../models/User'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private userDetails: BehaviorSubject<User>;\n\n  constructor(private apiService: ApiService) {\n    let user: User = null;\n    this.userDetails = new BehaviorSubject<User>(user);\n   }\n\n  login(email: string, pwd: string) : Observable<any> {\n    // return this.apiService.get(constant.urls.login +\"?email=\"+email+\"&pwd=\"+pwd);\n    return of([{name:\"sucess\"}]);\n  }\n\n  // not needed\n  setUser(u : User) : void {\n    this.userDetails.next(u);\n  }\n  \n  // not needed\n  getUser(): Observable<User> {\n    return this.userDetails.asObservable();\n  }\n\n  // not needed\n  getUserDeatislFromApi(email: string) {\n     return this.apiService.get(constant.urls.getUserDeatils + \"?email=\"+email);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { User } from 'src/app/models/User';\nimport { RegistrationService } from './registration.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n\n  registrationForm: FormGroup;\n  firstName: FormControl;\n  lastName: FormControl;\n  email: FormControl;\n  password: FormControl;\n  confirmPassword: FormControl\n\n  constructor(private registrationService: RegistrationService, private route: Router) { }\n\n  ngOnInit(): void {\n    this.firstName = new FormControl('', Validators.required);\n    this.lastName = new FormControl('', Validators.required);\n    this.email = new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]);\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n      Validators.maxLength(32),\n      // Validators.pattern(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^&(){}[]:;<>,.?/~_+-=|\\]).{8,32}\")\n      // Validators.pattern(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$\")\n      Validators.pattern('(?=.*[A-Za-z])(?=.*[0-9])(?=.*[$@$!#^~%*?&,.<>\"\\'\\\\;:\\{\\\\\\}\\\\\\[\\\\\\]\\\\\\|\\\\\\+\\\\\\-\\\\\\=\\\\\\_\\\\\\)\\\\\\(\\\\\\)\\\\\\`\\\\\\/\\\\\\\\\\\\]])[A-Za-z0-9\\d$@].{7,}')\n    ]);\n    // this.confirmPassword = new FormControl('',\n    //   [Validators.compose(\n    //     [Validators.required,\n    //     // Validators.pattern(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^&(){}[]:;<>,.?/~_+-=|\\]).{8,32}\"),\n    //     // this.validatePassword.bind(this)\n    //   ]\n    //   )]\n    // );\n\n    this.registrationForm = new FormGroup({\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      password: this.password\n      // confirmPassword: this.confirmPassword\n    })\n  }\n\n  registerUser() {\n\n    let user: User = {\n      firstName: this.firstName.value,\n      lastName: this.lastName.value,\n      email: this.email.value,\n      password: this.password.value\n    }\n    console.warn(this.registrationForm.value);\n    this.registrationService.registerUser(user)\n      .subscribe((data => {\n        alert(\"User created Successfully. Please login\");\n        this.route.navigateByUrl(\"\");\n      }), error => {\n        alert(\"There was a problem creating User! Please try again later\");\n      });\n  }\n\n  validatePassword(confirmControl: FormControl): { [key: string]: boolean } | null  {\n    if(this.password.value == this.confirmPassword.value) {\n      return { 'ageRange': false };\n    } else {\n      return { 'ageRange': true };;\n    }\n    \n  }\n\n}\n","<h2>Register</h2>\n<form [formGroup]=\"registrationForm\" (ngSubmit)=\"registerUser()\">\n  <div>\n    <label>\n      First Name:\n      <input id=\"firstName\" type=\"text\" formControlName=\"firstName\">\n    </label>\n    <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger\">\n\n      <div *ngIf=\"firstName.errors.required\" style=\"color: red;\">\n        First Name is required.\n      </div>\n    </div>\n  </div>\n\n\n  <div>\n    <label>\n      Last Name:\n      <input id=\"lastName\" type=\"text\" formControlName=\"lastName\">\n    </label>\n    <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger\">\n\n      <div *ngIf=\"firstName.errors.required\" style=\"color: red;\">\n        Last Name is required.\n      </div>\n    </div>\n  </div>\n\n  <div>\n    <label>\n      Email:\n      <input id=\"email\" type=\"text\" formControlName=\"email\">\n    </label>\n    <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger\">\n\n      <div *ngIf=\"email.errors.required\" style=\"color: red;\">\n        Last Name is required.\n      </div>\n      <div *ngIf=\"email.errors.email\" style=\"color: red;\">\n        Please provide a valid email id\n      </div>\n    </div>\n  </div>\n\n  <div>\n    <label>\n      Password:\n      <input id=\"password\" type=\"password\" formControlName=\"password\">\n    </label>\n    <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\n\n      <div *ngIf=\"password.errors.required\" style=\"color: red;\">\n        Password is required.\n      </div>\n      <div *ngIf=\"password.errors.pattern || password.errors.minlength || password.errors.maxlength\" style=\"color: red;\">\n        Password must contain atleast a digit, a uppercase letter, a lowercase letter and must be\n        minimum 8 char long and maximun 32 characters long.\n      </div>\n    </div>\n  </div>\n\n  <!-- <div>\n    <label>\n      Confirm Password:\n      <input  formControlName=\"confirmPassword\">\n    </label>\n    <div *ngIf=\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\" class=\"alert alert-danger\">\n      <div *ngIf=\"confirmPassword.errors.validatePassword\" style=\"color: red;\">\n        confirm Password value is required.\n      </div>\n    </div>\n  </div> -->\n\n  <button type=\"submit\" [disabled]=\"!registrationForm.valid\">Submit</button>\n\n</form>","import { Injectable } from '@angular/core';\nimport { ApiService } from 'src/app/core/api.service';\nimport { User } from 'src/app/models/User';\nimport { constant} from '../../constant/const'\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n  constructor(private api: ApiService) { }\n\n  registerUser(user: User) {\n    return this.api.post(constant.urls.register, user);\n    // return of([{name:\"sucess\"}]);\n  }\n}\n","export const constant = {\n    \"urls\" : {\n        \"register\" : \"/api/registerUser\",\n        \"login\": \"/api/login\",\n        \"getUserDeatils\": \"api/userDetails\",\n        \"updateUserDetails\": \"api/updateUser\"\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse} from '@angular/common/http';\nimport { User } from '../models/User';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  post(url: string, user: User) : Observable<any> {\n    return this.http.post(url, user);\n  }\n\n  get(url: string, params?: any) {\n    return this.http.get(url);\n  }\n}\n","export class User {\n    id?: number;\n    email: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    token?: string;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatButtonModule} from '@angular/material/button';\nimport {MatMenuModule} from '@angular/material/menu';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatMenuModule\n  ],\n  exports:[\n    MatSliderModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatMenuModule\n  ]\n})\nexport class AngularMatModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User } from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(user: User) {\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}